interface IProblem {
    problem: string
    example: {
        input: number[] | string
        output: string
    }[]
    test: {
        input: number[] | string
        output: string
    }[]
}

export const problemInfo: IProblem[][] = [
    [
        {
            problem: "1학년 학생들이 아침 일찍 일어나 힘차게 태권도를 하고 있다. 예지관에서 태권도를 하는 학생의 수는 a명이고, 대강당에서 태권도를 하는 학생의 수는 b명이다. 태권도를 하는 총 학생 수를 구하시오.",
            example: [
                {
                    input: [6, 7],
                    output: "13"
                }
            ],
            test: [
                {
                    input: [6, 7],
                    output: "13"
                },
                {
                    input: [10, 9],
                    output: "19"
                },
                {
                    input: [135, 931],
                    output: "1066"
                }
            ]
        },
        {
            problem: "KSA 실험실에서는 온도 조절 장치를 SAF 언어를 사용해 제어하고 있다. 실험실의 현재 온도와 목표 온도가 주어질 때, 두 온도 차의 절댓값을 구해주는 프로그램을 작성하시오.\n첫 번째 입력으로 현재 온도, 두 번째 입력으로 목표 온도가 주어진다.",
            example: [
                {
                    input: [18, 23],
                    output: "5"
                },
                {
                    input: [29, 25],
                    output: "4"
                }
            ],
            test: [
                {
                    input: [18, 23],
                    output: "5"
                },
                {
                    input: [29, 25],
                    output: "4"
                },
                {
                    input: [52, -24],
                    output: "76"
                }
            ]
        },
        {
            problem: "한범이는 짝수와 홀수를 구별해주는 프로그램을 만들고 싶어 한다. 입력 받은 정수가 짝수일 경우 1을 출력하고, 홀수일 경우 0을 출력하는 프로그램을 작성하시오.",
            example: [
                {
                    input: [47],
                    output: "0"
                },
                {
                    input: [24],
                    output: "1"
                }
            ],
            test: [
                {
                    input: [47],
                    output: "0"
                },
                {
                    input: [24],
                    output: "1"
                },
                {
                    input: [17],
                    output: "0"
                },
                {
                    input: [326],
                    output: "1"
                }
            ]
        },
        {
            problem: "학생들이 필수교육을 듣기 위해 대강당에 모여 있다. a행 b열로 의자를 배치했고, 한 명당 하나의 의자에 앉지만 빈 자리는 없다. 의자에 앉아있는 학생 수를 구하시오.\n첫 번째 입력으로 a, 두 번째 입력으로 b가 주어진다.",
            example: [
                {
                    input: [12, 10],
                    output: "120"
                },
                {
                    input: [40, 6],
                    output: "240"
                }
            ],
            test: [
                {
                    input: [12, 10],
                    output: "120"
                },
                {
                    input: [40, 6],
                    output: "240"
                },
                {
                    input: [7, 42],
                    output: "294"
                }
            ]
        },
        {
            problem: "SAF의 슬로건을 아스키 코드를 이용하여 출력하시오.",
            example: [
            ],
            test: [
                {
                    input: [],
                    output: "Swim Along the Future"
                }
            ]
        },
        {
            problem: "두 자연수 a, b의 최대공약수를 구하는 프로그램을 작성하시오.\n첫 번째 입력으로 a, 두 번째 입력으로 b가 주어진다.",
            example: [
                {
                    input: [10, 15],
                    output: "5"
                },
                {
                    input: [144, 90],
                    output: "18"
                }
            ],
            test: [
                {
                    input: [10, 15],
                    output: "5"
                },
                {
                    input: [144, 90],
                    output: "18"
                },
                {
                    input: [120, 64],
                    output: "8"
                }
            ]
        }
    ],
    [
        {
            problem: "피보나치 수열을 다음과 같이 정의한다.\nF(0) = 0, F(1) = 1\nF(n) = F(n - 1) + F(n - 2)	for	n ≥ 2\n정수 N이 주어질 때, F(N) 까지의 피보나치 수를 역순으로 출력하는 프로그램을 작성하시오.",
            example: [
                {
                    input: "10",
                    output: "55 34 21 13 8 5 3 2 1 1 0"
                }
            ],
            test: [
                {
                    input: "10",
                    output: "55 34 21 13 8 5 3 2 1 1 0"
                },
                {
                    input: "50",
                    output: "12586269025 7778742049 4807526976 2971215073 1836311903 1134903170 701408733 433494437 267914296 165580141 102334155 63245986 39088169 24157817 14930352 9227465 5702887 3524578 2178309 1346269 832040 514229 317811 196418 121393 75025 46368 28657 17711 10946 6765 4181 2584 1597 987 610 377 233 144 89 55 34 21 13 8 5 3 2 1 1 0"
                }
            ]
        },
        {
            problem: "자연수 N이 주어질 때, 1부터 N까지의 수 중 세제곱수만을 찾아 하나의 문자열로 이어붙여 출력하는 프로그램을 작성하시오.",
            example: [
                {
                    input: "30",
                    output: "1827"
                }
            ],
            test: [
                {
                    input: "30",
                    output: "1827"
                },
                {
                    input: "200804",
                    output: "18276412521634351272910001331172821972744337540964913583268598000926110648121671382415625175761968321952243892700029791327683593739304428754665650653548725931964000689217408879507851849112597336103823110592117649125000132651140608148877157464166375175616185193195112"
                }
            ]
        },
        {
            problem: "자연수 N이 주어졌을 때, 아래와 같은 모양이 출력되도록 한다.\n1. i번째 줄에는 1부터 i까지 숫자를 차례대로 출력하고, 이어서 i-1부터 1까지 숫자를 출력한다.\n2. 1 ≤ i ≤ N 이고 i는 1씩 증가",
            example: [
                {
                    input: "4",
                    output: "1\n121\n12321\n1234321"
                }
            ],
            test: [
                {
                    input: "4",
                    output: "1\n121\n12321\n1234321"
                },
                {
                    input: "10",
                    output: "1\n121\n12321\n1234321\n123454321\n12345654321\n1234567654321\n123456787654321\n12345678987654321\n12345678910987654321"
                }
            ]
        },
        {
            problem: "자연수 n이 (n≤10³) 입력으로 주어질 때, 1부터 n까지의 소수(prime number)의 합을 출력하여라. (시간제한 1초)",
            example: [
                
            ],
            test: [

            ]
        },
        {
            problem: "자연수 n이 (n≤10⁷) 입력으로 주어질 때, 1부터 n까지의 소수(prime number)의 합을 출력하여라. (시간제한 1초)",
            example: [

            ],
            test: [
                
            ]
        },
        {
            problem: "문자열 S와 그 길이 n이 (n≤10⁷) 입력으로 주어진다. 이때 S의 i, j, k번째 문자가 각각 S, A, F이도록 하는 순서쌍 (i, j, k)의 개수를 구하여라. (i<j<k) (시간제한 1초)",
            example: [

            ],
            test: [

            ]
        }
    ]
]